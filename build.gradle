plugins {
	id 'application'
	id 'checkstyle'
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'io.freefair.lombok' version '8.3'
	id 'jacoco'
}

group = 'trial.code'
version = '0.0.1-SNAPSHOT'

application {
	mainClass = 'trial.code.Application'
}

wrapper{
	gradleVersion = '8.2'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation(
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security',
			'org.springframework.boot:spring-boot-starter-data-jdbc',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-jdbc',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-devtools',
			'org.instancio:instancio-junit:3.3.0',
			'net.datafaker:datafaker:2.0.2',
			'com.h2database:h2:1.4.200')

	runtimeOnly (
			'com.h2database:h2',
			'org.postgresql:postgresql')

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task stage(dependsOn: ['clean', 'installDist'])

jacocoTestReport {
	reports {
		xml.required = true
	}
}

test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}